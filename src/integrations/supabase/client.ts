// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Environment variables - these should be set in your .env file
// For security, these values are loaded from environment variables, not hardcoded
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL as string | undefined;
// Older/newer templates sometimes name the anon key differently. Prefer ANON_KEY, fall back to PUBLISHABLE_KEY.
const SUPABASE_ANON_KEY =
  (import.meta.env.VITE_SUPABASE_ANON_KEY as string | undefined) ||
  (import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY as string | undefined) ||
  (import.meta.env.VITE_SUPABASE_PUBLISHABLE as string | undefined);

// Validate that environment variables are set. Don't throw at module import (which can cause white screens) â€”
// instead provide a clearer runtime error and a noop export so the app can render and show a friendly UI.
if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
  // eslint-disable-next-line no-console
  console.error(
    '[supabase] Missing Supabase environment variables. Please check your .env file and ensure VITE_SUPABASE_URL and either VITE_SUPABASE_ANON_KEY or VITE_SUPABASE_PUBLISHABLE_KEY are set.'
  );
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// If variables are missing, createClient will still be called with undefined which
// causes runtime errors. Guard creation so the module doesn't immediately throw.
export const supabase =
  SUPABASE_URL && SUPABASE_ANON_KEY
    ? createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY, {
        auth: {
          storage: localStorage,
          persistSession: true,
          autoRefreshToken: true,
        },
      })
    : // Minimal stub that will throw when used but prevents breaking the whole app at import time.
      ({} as unknown as ReturnType<typeof createClient>);